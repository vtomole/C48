struct token
{
  char* name;
  char* value;
}

typedef struct pair{
  void *car;
  void *cdr;
}pair;

typedef struct eval_arguments {
  pair *head;
  hashtable_t *environment;
}eval_arguments;

pair* create_pair(void* car, void* car)
{
 
  pair* pair = malloc(sizeof(pair));
  if(pair == NULL)
    {
      printf("Error creating a new node.\n");
      exit(0);
    }
  pair->car = car;
  pair->cdr = cdr;
 
  return pair;

}

int isnumber (char *s){
  if(s == NULL || *s == '\0' || isspace(*s)){
    return 0;
  }
  else{
    char* p;
    strtod(s, &p);
    return *p == '\0';
  }
}

pair* cons(void *car, pair* cdr)
{
 
  pair* new_pair = create_pair(car,cdr);
  car = new_pair;
  return car;
}
Parser_function()
{

}